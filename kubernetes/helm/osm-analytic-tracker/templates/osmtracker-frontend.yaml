apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: osmtracker-frontend-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.frontend.replicas }}
  template:
    metadata:
      labels:
        app: osmtracker
        role: frontend
      annotations:
        checksum/config: {{ include (print $.Chart.Name "/templates/osmtracker-secrets.yaml") . | sha256sum }}
    spec:
      containers:
      - name: osmtracker-frontend
        image: "{{ .Values.osmtracker.image.image }}:{{ .Values.osmtracker.image.tag }}"
        command: ["python", "/osmtracker/osm-analytic-tracker/osmtracker.py"]
        args: [
{{- template "osmtracker.common_args" . }}
               "run-backends", "--track"
              ]
        imagePullPolicy: {{ .Values.osmtracker.image.pullPolicy }}
        securityContext:
{{ toYaml .Values.osmtracker.securityContext | indent 10 }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.frontend.service.internalPort }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.frontend.service.internalPort }}
        env:
        - name: OSMTRACKER_REGION
          value: "{{ .Values.osmtracker.region }}"
        - name: OSMTRACKER_MAP_SCALE
          value: "{{ .Values.osmtracker.map_scale }}"
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              name: osmtracker-secrets
              key: dbuser_ro
        - name: DBPASSWD
          valueFrom:
            secretKeyRef:
              name: osmtracker-secrets
              key: dbuser_ro_pass
        lifecycle:
          postStart:
           exec:
             command:
             - "cp"
             - "-rT"
             - "/html-init"
             - "/html"
        volumeMounts:
        - mountPath: /html
          name: html-volume
      - name: nginx
        image: {{ .Values.web.image.image }}
        imagePullPolicy: {{ .Values.web.image.pullPolicy }}
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: html-volume
          readOnly: true
      volumes:
      - name: html-volume
        emptyDir:
          medium: "Memory"